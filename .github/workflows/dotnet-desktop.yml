name: .NET Core Desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        configuration: [Debug, Release]
    env:
      Solution_Name: 'Code Projects.sln'
      Test_Project_Path: 'C:\Users\isaac\RiderProjects\NEA-AI-Game\Code Projects.csproj'
      Wap_Project_Directory: 'C:\Users\isaac\RiderProjects\NEA-AI-Game\WapProjectDir'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '6.0.x'

    - name: Build the application
      run: dotnet build $env:Solution_Name /p:Configuration=$env:Configuration
      env:
        API_KEY: ${{ secrets.API_KEY }}
        Configuration: ${{ matrix.configuration }}

    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.Base64_Encoded_Pfx }}")
        $certificatePath = Join-Path -Path $env:Wap_Project_Directory -ChildPath 'GitHubActionsWorkflow.pfx'
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)

    - name: Create the app package
      run: msbuild $env:Wap_Project_Path /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile='GitHubActionsWorkflow.pfx' /p:PackageCertificatePassword=${{ secrets.Pfx_Key }}
      env:
        Appx_Bundle: Always
        Appx_Bundle_Platforms: 'x86|x64'
        Appx_Package_Build_Mode: StoreUpload
        Configuration: ${{ matrix.configuration }}
        Wap_Project_Path: 'C:\Users\isaac\RiderProjects\NEA-AI-Game\WapProjectPath'

    - name: Remove the pfx
      run: Remove-Item -path "$env:Wap_Project_Directory\GitHubActionsWorkflow.pfx"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: MSIX Package
        path: ${{ env.Wap_Project_Directory }}\AppPackages
